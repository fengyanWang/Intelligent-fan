C51 COMPILER V9.56.0.0   18B20                                                             05/08/2017 17:02:58 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE 18B20
OBJECT MODULE PLACED IN 18b20.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE 18b20.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\FanCtl) DEBUG OBJECTEXTEND TA
                    -BS(2)

line level    source

   1          #include "18b20.h"
   2          #include "delay.h"
   3          
   4          /******************************************
   5          * Function Name  : Delay
   6          * Description    : None
   7          * Input          : unsigned char a1,b1,c1
   8          * Output         : None
   9          * Return         : None
  10          *******************************************/
  11          void Delay(unsigned char a1,b1,c1)
  12          {
  13   1        unsigned char a,b,c;
  14   1        for(a=0;a<a1;a++)
  15   1        for(b=0;b<b1;b++)
  16   1        for(c=0;c<c1;c++);
  17   1      }
  18          
  19          
  20          
  21          /******************************************
  22          * Function Name  : Read_One_Byte()
  23          * Description    : 读取一个字节的数据read a byte date
  24          * Input          : None
  25          * Output         : None
  26          * Return         : None
  27          *******************************************/
  28          unsigned char Read_One_Byte()   //读数据时,数据以字节的最低有效位先从总线移出
  29          {
  30   1        uchar i   = 0;
  31   1        uchar dat = 0;
  32   1        for(i=8;i>0;i--)
  33   1        {
  34   2          DQ = 0;                  //将总线拉低，要在1us之后释放总线
  35   2                                 //单片机要在此下降沿后的15us内读数据才会有效。
  36   2          _nop_();                 //至少维持了1us,表示读时序开始
  37   2          dat >>= 1;               //让从总线上读到的位数据，依次从高位移动到低位。
  38   2          DQ = 1;                  //释放总线，此后DS18B20会控制总线,把数据传输到总线上
  39   2          Delay(1,1,1);        //延时10us,此处参照推荐的读时序图，尽量把控制器采样时间放到读时序后的15us内的最后部
             -分
  40   2          if(DQ)                   //控制器进行采样
  41   2          {
  42   3            dat |= 0x80;            //若总线为1,即DQ为1,那就把dat的最高位置1;若为0,则不进行处理,保持为0
  43   3          }        
  44   2        Delay(1,1,8);       //20us        //此延时不能少，确保读时序的长度60us。
  45   2        }
  46   1        return (dat);
  47   1      }
  48          
  49          /******************************************
  50          * Function Name  : Write_One_Byte
  51          * Description    : 写入一个字节的数据
  52          * Input          : uchar dat
  53          * Output         : None
C51 COMPILER V9.56.0.0   18B20                                                             05/08/2017 17:02:58 PAGE 2   

  54          * Return         : None
  55          *******************************************/
  56          void Write_One_Byte(uchar dat)
  57          {
  58   1        uchar i = 0;
  59   1        for(i=8;i>0;i--)
  60   1        {
  61   2           DQ = 0;                        //拉低总线
  62   2           _nop_();                       //至少维持了1us,表示写时序(包括写0时序或写1时序)开始
  63   2           DQ = dat&0x01;                 //从字节的最低位开始传输
  64   2                                         //指令dat的最低位赋予给总线,必须在拉低总线后的15us内,
  65   2                                         //因为15us后DS18B20会对总线采样。
  66   2           Delay(1,1,15);               //必须让写时序持续至少60us
  67   2      
  68   2           DQ = 1;                        //写完后,必须释放总线,
  69   2           dat >>= 1;
  70   2          Delay(1,1,1);
  71   2        }
  72   1      }
  73          
  74          /******************************************
  75          * Function Name  : Init_Ds18b20
  76          * Description    : DS18B20初始化send reset and initialization command
  77          * Input          : None
  78          * Output         : None
  79          * Return         : None
  80          *******************************************/
  81          void Init_Ds18b20(void)     
  82          {
  83   1        DQ = 1;                    //DQ复位,不要也可行。
  84   1        Delay(1,1,1);              //稍做延时  10us
  85   1        DQ = 0;                    //单片机拉低总线
  86   1        Delay(6,1,63); //600  us   //精确延时，维持至少480us
  87   1        DQ = 1;                    //释放总线，即拉高了总线
  88   1        Delay(5,1,63); //500us     //此处延时有足够,确保能让DS18B20发出存在脉冲。
  89   1      }
  90          
  91          /******************************************
  92          * Function Name  : ReadTemperature
  93          * Description    : 获取温度get the wenduerature
  94          * Input          : None
  95          * Output         : None
  96          * Return         :温度值 （-550~1250）
  97          *******************************************/
  98          float ReadTemperature()                   //
  99          {
 100   1        u8 TL=0,TH=0;
 101   1        u16 tem=0;
 102   1        u8 temp;
 103   1        float t=0;
 104   1        
 105   1        Init_Ds18b20();                //初始化
 106   1        Write_One_Byte(0xcc);          //忽略ROM指令
 107   1        Write_One_Byte(0x44);          //温度转换指令
 108   1        Init_Ds18b20();                 //初始化
 109   1        Write_One_Byte(0xcc);          //忽略ROM指令
 110   1        Write_One_Byte(0xbe);          //读暂存器指令
 111   1        TL = Read_One_Byte();           //读取到的第一个字节为温度LSB
 112   1        TH = Read_One_Byte();           //读取到的第一个字节为温度MSB
 113   1        if(TH>7)
 114   1          {
 115   2              TH=~TH;
C51 COMPILER V9.56.0.0   18B20                                                             05/08/2017 17:02:58 PAGE 3   

 116   2              TL=~TL; 
 117   2              temp=0;//温度为负  
 118   2          }else temp=1;//温度为正       
 119   1          tem=TH; //获得高八位
 120   1          tem<<=8;    
 121   1          tem+=TL;//获得底八位
 122   1          t=(float)tem*0.0625-3;//转换     
 123   1          if(temp)
 124   1            return t; //返回温度值
 125   1          else 
 126   1            return -t; 
 127   1      
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
